steps:
  - task: AzureCLI@2
    displayName: "Upload ARM templates and generate SAS token"
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        az storage account create -n "$(tempStorageName)" -g "$(sharedRgName)" -l "$(sharedRgLocation)" 
        az storage container create -n "$(tempContainerName)" --account-name "$(tempStorageName)" --auth-mode login 
        $accountKey = (az storage account keys list -g "$(sharedRgName)" -n "$(tempStorageName)" | ConvertFrom-Json)[0].value
        az storage blob upload-batch --source "$(Pipeline.Workspace)/deploy/" --pattern *.json --destination "$(tempContainerName)" --account-name $(tempStorageName) --account-key $accountKey

        $expireTime = $(date -u -d '30 minutes' +%Y-%m-%dT%H:%MZ)
        $connection = az storage account show-connection-string -g "$(sharedRgName)" --name "$(tempStorageName)" --query connectionString      
        $token = az storage container generate-sas --name $(tempContainerName) --expiry $expireTime --permissions r --output tsv --connection-string $connection
        
        Write-Host "##vso[task.setvariable variable=storageSasToken]$token"

        echo $token
        echo $storageSasToken
        echo $connection       


  - task: AzureResourceManagerTemplateDeployment@3    
    displayName: 'Provision resources'
    inputs:
      deploymentScope: 'Resource Group' 
      azureResourceManagerConnection: '$(azureSubscription)' 
      location: '$(rgLocation)' 
      action: 'Create Or Update Resource Group' 
      resourceGroupName: '$(rgName)'
      deploymentMode: 'Incremental' 
      csmFile: '$(Pipeline.Workspace)/deploy/main.json'       
      overrideParameters: |
        -storageName "$(tempStorageName)" 
        -storageContainer "$(tempContainerName)" 
        -templateSas "$(storageSasToken)" 
        -rgName "$(rgName)" 
        -rgLocation "$(rgLocation)" 
        -planName "plan-$(apiName)-$(environmentName)" 
        -planSku "$(planSku)" 
        -planCapacity "$(planCapacity)" 
        -serverName "$(serverName)"         
        -databaseName "$(databaseName)" 
        -adminUserName "$(adminUserName)" 
        -adminPassword "$(adminPassword)" 
        -allowedIpAddresses "$(allowedIpAddresses)" 
        -apiName "app-$(apiName)-$(environmentName)" 
        -aspNetCoreEnvironment "$(aspNetCoreEnvironment)" 
        -keyVaultName "kv-$(apiName)-$(environmentName)" 

        
        
        


